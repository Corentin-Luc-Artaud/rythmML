package RythmML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_NoteFrequencyEnum extends EnumerationDescriptorBase {

  public EnumerationDescriptor_NoteFrequencyEnum() {
    super(0xf1ebcfd5fd1b4a1dL, 0xa2ad03091ad47f30L, 0x65912afefd8bf493L, "NoteFrequencyEnum", "r:916f00b6-5fe2-4b5f-89a4-4c707c5c502b(RythmML.structure)/7318678144117634195");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Every_0 = new EnumerationDescriptor.MemberDescriptor("Every", "every", 0x65912afefd8bf494L, "r:916f00b6-5fe2-4b5f-89a4-4c707c5c502b(RythmML.structure)/7318678144117634196");
  private final EnumerationDescriptor.MemberDescriptor myMember_At_0 = new EnumerationDescriptor.MemberDescriptor("At", "at the", 0x65912afefd8bf495L, "r:916f00b6-5fe2-4b5f-89a4-4c707c5c502b(RythmML.structure)/7318678144117634197");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xf1ebcfd5fd1b4a1dL, 0xa2ad03091ad47f30L, 0x65912afefd8bf493L, 0x65912afefd8bf494L, 0x65912afefd8bf495L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Every_0, myMember_At_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Every":
        return myMember_Every_0;
      case "At":
        return myMember_At_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
