package RythmML.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ANote = 0;
  public static final int Bar = 1;
  public static final int BarRepetition = 2;
  public static final int DrumNote = 3;
  public static final int NoteFrequency = 4;
  public static final int Position = 5;
  public static final int Section = 6;
  public static final int Silence = 7;
  public static final int Song = 8;
  public static final int StandarNote = 9;
  public static final int Track = 10;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xf1ebcfd5fd1b4a1dL, 0xa2ad03091ad47f30L);
    builder.put(0x65912afefd81ca63L, ANote);
    builder.put(0x65912afefd81ca60L, Bar);
    builder.put(0x52bcad3e71e6e537L, BarRepetition);
    builder.put(0x65912afefd81ca67L, DrumNote);
    builder.put(0x52bcad3e71e6e67aL, NoteFrequency);
    builder.put(0x65912afefd81ca6dL, Position);
    builder.put(0x65912afefd81ca5dL, Section);
    builder.put(0x65912afefd81ca64L, Silence);
    builder.put(0x65912afefd815cddL, Song);
    builder.put(0x65912afefd81ca6aL, StandarNote);
    builder.put(0x65912afefd81ca5aL, Track);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
